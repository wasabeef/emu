name: Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on existing tags

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: release_notes
        uses: orhun/git-cliff-action@v3
        with:
          config: .github/cliff.toml
          args: --latest --strip header

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.release_notes.outputs.content }}
          draft: false
          prerelease: false

  release:
    name: Release - ${{ matrix.platform.release_for }}
    needs: create-release
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: emu
            name: emu-Linux-x86_64.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: emu.exe
            name: emu-Windows-x86_64.zip
            command: build

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: emu
            name: emu-Darwin-x86_64.tar.gz
            command: build

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: emu
            name: emu-Darwin-aarch64.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.platform.target }}

      - name: Prepare binaries (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Prepare binaries (Unix)
        if: matrix.platform.os != 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.platform.name }}
          asset_name: ${{ matrix.platform.name }}
          tag: ${{ github.ref }}

  homebrew:
    needs: [create-release, release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout emu repository
        uses: actions/checkout@v4
        with:
          path: emu

      - name: Checkout emu-tap repository
        uses: actions/checkout@v4
        with:
          repository: wasabeef/homebrew-emu-tap
          token: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
          path: emu-tap

      - name: Wait for release assets
        run: sleep 30

      - name: Update Homebrew formula
        run: |
          cd emu
          VERSION=${{ github.ref_name }}
          VERSION_NUM=${VERSION#v}
          
          # Download and calculate SHA256
          echo "Calculating SHA256 for each platform..."
          
          MACOS_ARM64_URL="https://github.com/wasabeef/emu/releases/download/${VERSION}/emu-Darwin-aarch64.tar.gz"
          MACOS_X86_URL="https://github.com/wasabeef/emu/releases/download/${VERSION}/emu-Darwin-x86_64.tar.gz"
          LINUX_X86_URL="https://github.com/wasabeef/emu/releases/download/${VERSION}/emu-Linux-x86_64.tar.gz"
          
          MACOS_ARM64_SHA=$(curl -sL "$MACOS_ARM64_URL" | shasum -a 256 | cut -d' ' -f1)
          MACOS_X86_SHA=$(curl -sL "$MACOS_X86_URL" | shasum -a 256 | cut -d' ' -f1)
          LINUX_X86_SHA=$(curl -sL "$LINUX_X86_URL" | shasum -a 256 | cut -d' ' -f1)
          
          # Generate formula
          cat > ../emu-tap/Formula/emu.rb << EOF
          class Emu < Formula
            desc "TUI for managing Android emulators and iOS simulators"
            homepage "https://github.com/wasabeef/emu"
            version "${VERSION_NUM}"
            license "MIT"

            on_macos do
              if Hardware::CPU.arm?
                url "${MACOS_ARM64_URL}"
                sha256 "${MACOS_ARM64_SHA}"
              else
                url "${MACOS_X86_URL}"
                sha256 "${MACOS_X86_SHA}"
              end
            end

            on_linux do
              url "${LINUX_X86_URL}"
              sha256 "${LINUX_X86_SHA}"
            end

            def install
              bin.install "emu"
            end

            test do
              assert_match version.to_s, shell_output("#{bin}/emu --version")
            end
          end
          EOF

      - name: Commit and push formula update
        run: |
          cd emu-tap
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/emu.rb
          git commit -m "emu ${{ github.ref_name }}"
          git push
